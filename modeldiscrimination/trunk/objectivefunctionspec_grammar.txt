objectivespec ::= knockout_treatment_magic knockout_treatment_objectivespec

knockout_treatment_objectivespec ::= globalsettings genemapping_def procedure_defs simexpression_defs arraymapping_def

procedure_defs ::= (procedure_def)+
simexpression_defs ::= (simexpression_def)+
knockout_treatment_magic ::= "KnockoutTreatmentObjectiveSpecification-0.1" NEWLINE NEWLINE

blacklist ::= blacklist_header blacklist_body blacklist_footer
NEWLINE
globalsettings ::= globalsettings_header globalsettings_body globalsettings_footer NEWLINE
genemapping_def ::= genemapping_header genemapping_body genemapping_footer NEWLINE
procedure_def ::= procedure_header procedure_body procedure_footer NEWLINE
simexpression_def ::= simexpression_header simexpression_body simexpression_footer NEWLINE
arraymapping_def ::= arraymapping_header arraymapping_body arraymapping_footer

blacklist_header ::= "blacklistdefs" NEWLINE
blacklist_body ::= (blacklist_instruction)+
blacklist_footer ::= "endblacklistdefs" NEWLINE

blacklist_instruction ::= "factor: " (identifier)+ | "gene: " (identifier)+

globalsettings_header ::= "globasettingdefs" NEWLINE
globalsettings_body ::= transformation_def distancemeasure_def offset_def
globalsettings_footer ::= "endglobalsettingdefs" NEWLINE

transformation_def ::= "transformation:" transformation_type NEWLINE
transformation_type ::= "log" | "none"

distancemeasure_def ::= "distance:" distance_type NEWLINE
distance_type ::= "correlation" | "euclidean" | "sum_squares" 

offset_def ::= "offset:" realnumber
	| "offset:" realnumber "data_sd"

procedure_header ::= "procedure" identifier NEWLINE 
procedure_body ::= (instruction)+

instruction ::= procedure_identifier
	| primary_instruction

primary_instruction ::= "knockout:" identifier NEWLINE
	| "runtimesteps:" integer NEWLINE
	| "treatment:" identifier "=" realnumber NEWLINE
	| "overexpress:" identifier "=" realnumber NEWLINE 


procedure_footer ::= "endprocedure" NEWLINE
procedure_identifier ::= identifier

simexpression_header ::= "simexpression" identifier NEWLINE
simexpression_body ::= (identifier NEWLINE)+
simexpression_footer ::= "endsimexpression" NEWLINE

genemapping_header ::= "genemapping" NEWLINE
genemapping_body ::= (factor_def NEWLINE)+   
genemapping_footer ::= "endgenemapping" NEWLINE 

arraymapping_header ::= "arraymapping" NEWLINE
arraymapping_body ::= (arraymapping_spec)+
# identifier following "array" identifies an array in the empirical data set
# identifier following ":" identifies a simexpression
# identifier following "/" identifies a simexpression to be used as a ratio reference
arraymapping_spec ::= "array" identifier ":" identifier ( "/" identifier)? NEWLINE
arraymapping_footer ::= "endarraymapping" NEWLINE


factor_def ::= "factor" identifier "=" (gene_manufacturer_identifier)+ NEWLINE

----- terminals ----------------------------------------------------

gene_manufacturer_identifier ::= doublequote character_but_not_doublequote+ doublequote

realnumber ::= digit_sequence "." unsigned_digit_sequence+ scale_factor+
                | digit_sequence scale_factor

digit_sequence ::= sign+ unsigned_digit_sequence

unsigned_digit_sequence ::= digit+


scale_factor ::= ("E" | "e") digit_sequence
sign ::=  "+" | "-"


digit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

identifier ::= (letter | "_") (letter | digit | "_")+

letter ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"

doublequote ::= the doublequote character (chr(34))

